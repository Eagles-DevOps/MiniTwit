---
name: Continuous Deployment

on:
  push:
    branches:
      - terra

env: 
  REGISTRY: ghcr.io 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write 
    id_token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with: 
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Docker Metadata for main app
        id: meta-app
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/app
          flavor: |
            latest=true
          tags: |
            type=sha

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for API
        id: meta-api
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/api
          flavor: |
            latest=true
          tags: |
            type=sha

      - name: Debug meta outputs
        run: |
          echo "Labels: ${{ toJson(steps.meta.outputs.labels) }}"
          echo "Tags: ${{ toJson(steps.meta.outputs.tags) }}"

      - name: Build and push Docker Image for main app 
        uses: docker/build-push-action@v4
        with:
          context: "./minitwit-web-app/"
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Docker Image for API
        uses: docker/build-push-action@v4
        with:
          context: "./minitwit-api/"
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_KEY: ${{ secrets.VIKTORIA_PRIVATE_KEY }}

      - name: Deploy to server main app
        run: >
          ssh $SSH_USER@161.35.88.22
          -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no
        # '/minitwit/deploy.sh'
      
      - name: Deploy to server API
        run: >
          ssh $SSH_USER@104.248.203.85
          -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no
        # '/minitwit/deploy.sh'

        env:
          SSH_USER: ${{ secrets.VIKTORIA_SSH_USER }}