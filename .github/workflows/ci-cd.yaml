name: ci-cd

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
        # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # https://github.com/docker/metadata-action
      - name: Extract Docker Metadata for app
        id: meta-app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/app
          flavor: |
            latest=true
          tags: |
            type=sha

      - name: Extract Docker metadata for API
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/api
          flavor: |
            latest=true
          tags: |
            type=sha

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image for app
        uses: docker/build-push-action@v5
        with:
          context: "./minitwit-web-app/"
          push: true
          tags: ${{ steps.meta-app.outputs.tags }}
          labels: ${{ steps.meta-app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image for api
        uses: docker/build-push-action@v5
        with:
          context: "./minitwit-web-app/"
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/terraform
          chmod 600 ~/.ssh/terraform
        env:
          SSH_KEY: ${{ secrets.SSH_KEY_TERRAFORM }}
      
      - name: Deploy to server
        run: >
          ssh root@$SSH_HOST
          -i ~/.ssh/terraform -o StrictHostKeyChecking=no
          'sh /tmp/provision.sh'
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_TERRAFORM }}